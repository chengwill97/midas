Trajectories and Python scripts Hausdorff all-pairs
================================================================================

Directories
=======================================

benchmarks
----------
Contains a test directory, which can be ignored. Three directories named "ca",
"ha", and "aa" contain the SLURM and Python scripts necessary for running
benchmarks using c-alpha (ca), heavy-atom (ha), and all-atom (aa) AdK systems.
All benchmarks were run using DIMS trajectories (see below). Each of these
directories contains the following:
  * x1 sub-directories:
      Contain benchmarks using the original trajectories.
  * x2 sub-directories:
      Consist of double-length versions of trajectories in x1.
  * x4 sub-directories:
      Consist of quadruple-length versions of trajectories in x1.
  * Within x1, x2, and x4 sub-directories, four labeled SLURM scripts are
    available for running benchmarks using 1, 4, 8, and 16 processes (on one
    node); corresponding log files store benchmark results for three repeats.
  * Within x1, x2, and x4 sub-directories, there's a corresponding Python script 
    (dh_stampede_x*.py) for performing the all-pairs Hausdorff comparison.
    CodeTiming.py module is used by dh_stampede_x*.py for timing purposes.

converted
---------
Contains trajectory coordinates in compressed NumPy format for DIMS and GeoPath
AdK closed to open transitions with the following naming scheme:
"trj_xx_###.npz.npy"
  * xx is either:
      - "ca" --> c-alpha
      - "ha" --> heavy-atom
      - "aa" --> all-atom
  * ### is a number from 001 to 400.
      - 001 thru 200 (inclusive) were generated by DIMS simulations
      - 201 thru 400 (inclusive) were generated by GeoPath simulations.
  * Use DIMS simulations only (001 through 200) for consistency with provided
    benchmarks.

misc
----
Contains miscellaneous scripts and files that do not need to be directly used.
  * misc/scripts:
      Contains "pathway_rad.py" for converting trajectories from DCD to NumPy
      format using MDAnalysis.
  * misc/top:
      Contains required topology files for conversion with pathway_rad.py.
  * misc/dh:
      Contains Hausdorff distance matrices produced by all-pairs comparisons.
      Used for validation of Hausdorff and all-pairs algorithms.


Benchmark notes
=======================================
Any of the dh_stampede_x1.py scripts can be used to obtain the optimized
Hausdorff distance function ("dH"). dH takes a pair of trajectories in NumPy
array format in the form T x (3N), where T is the number of time steps, N is
the number of atoms, and 3N is the dimension of the corresponding
configuration space (for N atoms in 3D Euclidean space):

    1st time step:
    --------------
       [     Atom 1     |      Atom 2     | ... |      Atom N     ]
       [x1_1, y1_1, z1_1, x1_2, y1_2, z1_2, ... , x1_N, y1_N, z1_N]

    2nd time step:
    --------------
       [     Atom 1     |      Atom 2     | ... |      Atom N     ]
       [x2_1, y2_1, z2_1, x2_2, y2_2, z2_2, ... , x2_N, y2_N, z2_N]

    Full trajectory:
    ----------------
      [
       [x1_1, y1_1, z1_1, x1_2, y1_2, z1_2, ... , x1_N, y1_N, z1_N],
       [x2_1, y2_1, z2_1, x2_2, y2_2, z2_2, ... , x2_N, y2_N, z2_N],
         .
         .
         .
       [xT_1, yT_1, zT_1, xT_2, yT_2, zT_2, ... , xT_N, yT_N, zT_N]
      ]

dH returns the Hausdorff distance for the inputted pair of trajectories. The
"_worker" helper function deals with computing Hausdorff distances for a chunk
of pairs in the all-pairs comparison.